#!/usr/bin/perl

# confgen - a CGI application to generate hybrid 7 ircd configurations for a network of servers using a SQL database
# Written by Alan F <alan@loonix.net>
# $Id: confgen.pl,v 1.1 2005/01/11 20:17:30 db Exp $

use warnings; use strict;
use CGI qw(:standard);
use DBI;
use vars qw($VERSION $cgi $dbh $servername $location $admin $description $adminemail $hubsequence $internalip $externalip $getconfpass $network_name $network_desc $stuffdir $send_password $accept_password);

$VERSION = '1.0';
$network_name = "networkname";			# ALL
$network_desc = "www.networksite.org";		# THESE
$stuffdir = "/var/www/localhost/confgen";	# VARIABLES
$send_password = "xxxxxxx";			# NEED
$accept_password = "xxxxxx";			# CHANGING

print "Content-type: text/plain\n\n";
$cgi = new CGI;
die unless (($cgi->param('server')) && ($cgi->param('pass')) && ($cgi->param('file')));
$dbh = DBI->connect("dbi:SQLite:dbname=$stuffdir/confgen.sqlite") or die; # This should work with any DBD driver... DBD::pg, DBD::mysql, etc

my $sth_serverinfo = $dbh->prepare("SELECT server,location,admin,description,adminemail,internalip,externalip,hubsequence,getconfpass FROM servers WHERE server=? AND status='ACTIVE'");
$sth_serverinfo->execute($cgi->param('server'));
$sth_serverinfo->bind_columns(\$servername, \$location, \$admin, \$description, \$adminemail, ,\$internalip, \$externalip, \$hubsequence, \$getconfpass);
$sth_serverinfo->fetch;
$sth_serverinfo->finish;
die unless (($servername) && ($location) && ($admin) && ($description) && ($adminemail) && ($externalip) && ($getconfpass eq $cgi->param('pass')));

if ($cgi->param('file') eq 'serverinfo.conf') {
	confheader('serverinfo.conf');
	print "serverinfo {\n";
	print "\tname = \"$servername\";\n";
	print "\tvhost = \"$internalip\";\n" if ($internalip);
	print "\tdescription = \"$description\";\n";
	print "\tnetwork_name = \"$network_name\";\n";
	print "\tnetwork_desc = \"$network_desc\";\n";
	print "\thub = yes;\n";
	print "};\n\n";
	print "admin {\n";
	print "\tname = \"$admin\";\n";
	print "\tdescription = \"Main Server Administrator\";\n";
	print "\temail = \"$adminemail\";\n";
	print "};\n";
} elsif ($cgi->param('file') eq 'ircd.conf') {
	confheader('ircd.conf');
	open(IRCD,"</var/www/localhost/confgen/ircd.conf");
	while (<IRCD>) {
		print "$_";
	}
	close(IRCD);
} elsif ($cgi->param('file') eq 'opers.conf') {
	confheader('opers.conf');
	my $sth_opers = $dbh->prepare("SELECT oper,hostmask,pass,flags FROM opers WHERE status='ACTIVE'");
	$sth_opers->execute;
	while (my @oper = $sth_opers->fetchrow_array) {
		print "operator {\n";
		print "\tname = \"$oper[0]\";\n";
		print "\tuser = \"$oper[1]\";\n";
		print "\tpassword = \"$oper[2]\";\n";
		print "\tclass = \"opers\";\n";
		foreach my $flag (split(/\+/,$oper[3])) {
			print "\t$flag = yes;\n";
		}
		print "};\n\n";
	}
} elsif ($cgi->param('file') eq 'ircd.motd') {
	open(MOTD,"</var/www/localhost/confgen/ircd.motd");
	while (<MOTD>) {
		s/#servername#/$servername/gi;
		s/#location#/$location/gi;
		s/#description#/$description/gi;
		s/#adminemail#/$adminemail/gi;
		s/#admin#/$admin/gi;
		print "$_";
	}
	close(MOTD);
} elsif ($cgi->param('file') eq 'connect.conf') {
	confheader('connect.conf');
	my @seq = split(/\+/,$hubsequence);
	my $sql = "SELECT server,externalip FROM servers WHERE status='ACTIVE' AND server != '$servername'";
	foreach my $seqserver (@seq) {
		my $sth_server = $dbh->prepare("SELECT server,externalip FROM servers WHERE server=?");
		$sth_server->execute($seqserver);
		while (my @server = $sth_server->fetchrow_array) {
			$sql .= " AND server != '$server[0]";
			connect_block($server[0],$server[1],1);
		}
	}
	my $sth_servers = $dbh->prepare($sql);
	$sth_servers->execute;
	while (my @server = $sth_servers->fetchrow_array) {
		connect_block($server[0],$server[1]);
	}
}	

sub connect_block {
	print "connect {\n";
	print "\tname = \"$_[0]\";\n";
	print "\thost = \"$_[1]\";\n";
	print "\tsend_password = \"$send_password\";\n";
	print "\taccept_password = \"$accept_password\";\n";
	print "\tencrypted = yes;\n";
	print "\tport = 6667;\n";
	print "\thub_mask = \"*\";\n";
	print "\tclass = \"server\";\n";
	if ($_[2]) {
		print "\tautoconn = yes;\n";
	} else {
		print "\tautoconn = no;\n";
	}
	print "};\n\n";
}

sub confheader {
	print "/* $_[0] for $servername on the $network_name IRC network\n";
	print " * do not edit this file manually!\n";
	print " * generated by confgen $VERSION\n */\n\n";
}

$dbh->disconnect;
